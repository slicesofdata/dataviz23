---
title: "Visualizing Associations"
format: revealjs
slide-number: c/t #h/v
#  width: 1600
#  height: 900
#logo: "images/dataviz_hex_plus_course.jpg"
#logo: "https://www.rstudio.com/wp-content/uploads/2018/10/RStudio-Logo-Flat.png"
#footer: "[](https://rstudio-conf-2022.github.io/get-started-quarto/)"
css: ["css/styles.css"]
#theme: simple
echo: true  # for code echo

#editor: visual
---


```{r, echo=FALSE, message=FALSE, warning=FALSE}
library(ggplot2)
library(magrittr)
library(dplyr)
```


## Loading Data

```{r}
SWIM <- readr::read_csv("https://github.com/slicesofdata/dataviz23/raw/main/data/swim/cleaned-2023-CMS-Invite.csv", 
                        show_col_types = F)
```

## `geom_point()`

```{r}
SWIM %>%
  ggplot(data = ., 
         mapping = aes(x = Distance, y = Time)) +
  geom_point()
```


## `Smoothing`geom_smooth()`

```{r}
SWIM %>%
  filter(., Distance < 1500) %>%
  ggplot(., aes(x = Distance, y = Time)) +
  geom_point() +
  geom_smooth()
```


## Linear Fit

```{r}
SWIM %>%
  filter(., Distance < 1500) %>%
  ggplot(., aes(x = Distance, y = Time)) +
  geom_point() +
  geom_smooth(method = "lm")
```


## Multiclass Scatterplots

- scatterplots with more than 2 variables
- communicate relationship with a third variabl
- mapped to an aesthetic like color, size, shape

## Mapping a numeric variable

```{r}
SWIM %>%
  filter(., 
         !is.na(Name),
         Time < 1000
         
         ) %>%
  ggplot(., aes(x = factor(Distance), y = Time)) +
  geom_point(aes(col = Distance))
```

```{r}
SWIM %>%
  filter(., Distance < 1500) %>%
  ggplot(., aes(x = Distance, y = Time)) +
  geom_point() +
  geom_smooth(method = "lm")
```


## *`geom_point()` when a variable is a factor*

Point plots can all be used for plotting individual data points for categorical data. 

```{r}
SWIM %>%
  filter(., Distance < 1500) %>%
  ggplot(., aes(x = factor(Distance), y = Time)) +
  geom_point()
```




## Make this slide Red  {background-color="red"}


## Making a Slide Incremental

Say you want to reveal the content of slide piecemeal without rewriting separate slides with previous content.

. . .

Then add some content...

. . .

Then some more content


## Omit This Slide {visibility = "hidden"}

## Add links

- [cmc](http://cmc.edu "my tooltip")


::: {.incremental}

- First item
- Second item

:::


## Fragments

::: {.fragment}
Fade in
:::

::: {.fragment .fade-out}
Fade out
:::

::: {.fragment .highlight-red}
Highlight red
:::

::: {.fragment .fade-in-then-out}
Fade in, then out
:::

# New Section

## Fragments, nesting

::: {.fragment .fade-in}
::: {.fragment .highlight-red}
::: {.fragment .semi-fade-out}
Fade in > Turn red > Semi fade out
:::
:::
:::


## Fragments, spans

This is an [important sentence!]{.fragment .highlight-red}


Mind the [gap]{.fragment .fade-in} when riding the rail!

# Columns


## Column layout

:::: {.columns}

::: {.column width="40%"}
contents...s
:::

::: {.column width="60%"}
contents...
:::

::::



## Output Location

```{r}
#| output-location: column-fragment
#| code-line-numbers: "|2"

library(ggplot2)

mtcars |> 
  ggplot(aes(x = disp, y = mpg)) +
  geom_point() +
  geom_smooth(method = "loess", formula = "y~x")
```


