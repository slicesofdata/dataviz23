---
title: "**Reading and Managing Files**"
author: "Gabriel I. Cook"
#date: "`r Sys.Date()`"

#output: kjhslides::kjh_slides_reader
#editor_options: 
#  chunk_output_type: console
---

```{r, include = FALSE}
knitr::opts_chunk$set(
  collapse = TRUE,
  comment = "#>"
)
```

# Reading Files

## Load our libraries

-   `here` will help keep folders organized

-   [`tidyverse`](https://www.tidyverse.org/packages/) is an ecosystem that will load other relevant libraries

    -   `readr` for reading data files

    -   `dplyr` for manipulating data files

    -   `ggplot` for and creating plots

    -   `magrittr` for piping or chaining code commands


``` R
library(here)
library(readr) # or library(tidyverse)
library(magrittr)
```

```{r}
library(here)
library(readr)
library(tidyverse)
library(magrittr)
```


# Getting Data

We will most certainly need data. If you want explore and find some interesting data sets, check out the data archive at the [tidytuesday](https://github.com/rfordatascience/tidytuesday/tree/master/data) github page. They have all data sets corresponding to Tuesday projects dating back to 2018.


# Reading in CSV files

Base R has .kjh-green[`read.csv()`]

--

Corresponding tidyverse "underscored" version: .kjh-green[`read_csv()`].

It is pickier and more talkative than the Base R version. Use it instead.

---

# Where's my data? Using .kjh-green[`here()`]

If we're loading a file, it's coming from _somewhere_.

If it's a file on our hard drive somewhere, we will need to interact with the file system. We should try to do this in a way that avoids _absolute_ file paths. 

```r
# This is not portable!
df <- read_csv("/Users/kjhealy/Documents/data/misc/project/data/mydata.csv")
```

--
  
We should also do it in a way that is _platform independent_. 

This makes it easier to share your work, move it around, etc. Projects should be self-contained.

---

# Where's my data? Using .kjh-green[`here()`]

The `here` package, and .kjh-green[**`here()`**] function builds paths relative to the top level of your R project. 

```{r 03-make-a-graph-6 }
here() # this path will be different for you
```

---

# Where's the data? Using .kjh-green[`here()`]

This seminar's files all live in an RStudio project. It looks like this:

```{r 03-make-a-graph-7, echo = FALSE}
fs::dir_tree(here(), recurse = 0)
```

I want to load files from the `data` folder, but I also want _you_ to be able to load them. I'm writing this from somewhere deep in the `slides` folder, but you won't be there. Also, I'm on a Mac, but you may not be.

---

# Where's the data? Using .kjh-green[`here()`]

 So:

```{r 03-make-a-graph-8 }
## Load the file relative to the path from the top of the project, without separators, etc
organs <- read_csv(file = here("data", "organdonation.csv"))
```

--
.SMALL[

```{r 03-make-a-graph-9 }
organs
```

]

.small[And there it is.]

---

# .kjh-green[`read_csv()`] comes in different varieties


## .kjh-green[**`read_csv()`**] Field separator is a comma: .kjh-red[**`,`**]

```{r 03-make-a-graph-10 }
organs <- read_csv(file = here("data", "organdonation.csv"))
```

## .kjh-green[**`read_csv2()`**] Field separator is a semicolon: .kjh-red[**`;`**]

```r
# Example only
my_data <- read_csv2(file = here("data", "my_euro_file.csv))
```

Both are special cases of .kjh-green[**`read_delim()`**]

---

# Other species are also catered to

- .kjh-green[**`read_tsv()`**] Tab separated.

- .kjh-green[**`read_fwf()`**] Fixed-width files.

- .kjh-green[**`read_log()`**] Log files (i.e. computer log files).

- .kjh-green[**`read_lines()`**] Just read in lines, without trying to parse them.

---

# Also often useful ...

- .kjh-green[**`read_table()`**]  

For data that's separated by one (or more) columns of space.


---

# And for foreign file formats ... 

## The tidyverse's .kjh-lblue[`haven`] package provides

- .kjh-green[**`read_dta()`**]  Stata

- .kjh-green[**`read_spss()`**]  SPSS

- .kjh-green[**`read_sas()`**]  SAS

- .kjh-green[**`read_xpt()`**]  SAS Transport


## Make these functions available with .kjh-green[`library`]`(haven)`

---

# You can read files remotely, too

.SMALL.squish3[
You can give these functions local files, or they can also be pointed at URLs.

Compressed files (`.zip`, `.tar.gz`) will be automatically uncompressed.

(Be careful what you download from remote locations!)]

.SMALL[
```{r 03-make-a-graph-11 }
organ_remote <- read_csv("http://kjhealy.co/organdonation.csv")

organ_remote
```
]

---

class: center middle main-title section-title-1

# .huge.kjh-lblue[A Plot's .kjh-yellow[Components]]

---

layout: true
class: title title-1

---

# What we need our code to make

.pull-left[

.center[![:scale 80%](img/03_ggplot_flow_final_plot_only.png)]

]

--


- .medium[Data .kjh-pink[**represented**] by visual elements;]

--
